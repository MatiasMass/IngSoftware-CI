name: Continous Integration
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "fastapi[all]"
          pip install pytest
  test:
    name: test
    needs: [build]
    runs-on: ubuntu-22.04
    if: needs.build.result == 'success'
    steps:
    - name: Run tests
      run: pytest test.py
    - name: Send Slack notification
      uses: ravsamhq/notify-slack-action@v2
      if: always()
      with:
        status: ${{ job.status }}
        token: ${{ secrets.GITHUB_TOKEN }}
        notification_title: "{workflow} has {status_message}"
        message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
        footer: "Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>"
        notify_when: "failure"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
  sonarcloud:
    name: SonarCloud
    needs: [build]
    runs-on: ubuntu-latest
    if: needs.build.result == 'success'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Send Slack notification
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
            status: ${{ job.status }}
            token: ${{ secrets.GITHUB_TOKEN }}
            notification_title: "{workflow} has {status_message}"
            message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
            footer: "Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>"
            notify_when: "failure"
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}   
  deploy-api:
    name: Deploy API
    needs: [sonarcloud]
    runs-on: ubuntu-latest
    if: needs.sonarcloud.result == 'success'
    steps:
      - name: Run FastAPI
        run: uvicorn main:app --host 0.0.0.0 --port 8000 --reload   
  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}